---
openapi: 3.0.1
info:
  title: API V1 - Conway's Game of Life
  version: v1
  description: An API for simulating Conway's Game of Life.
paths:
  "/api/v1/boards":
    get:
      summary: Lists all boards
      tags:
      - Boards
      description: Returns a list of all boards currently stored in the database,
        including their current state and evolution status.
      responses:
        '200':
          description: successful
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    state:
                      type: array
                      items:
                        type: array
                        items:
                          type: integer
                    status:
                      type: string
                      enum:
                      - processing
                      - stable
                      - oscillating
                      - max_attempts_reached
                    created_at:
                      type: string
                      format: date-time
                    updated_at:
                      type: string
                      format: date-time
                  required:
                  - id
                  - state
                  - status
                  - created_at
                  - updated_at
    post:
      summary: Creates a board
      tags:
      - Boards
      description: |
        Creates a new board from an initial 2D array state. If a board with the same state already exists, it returns the existing board's data.
        Otherwise, it creates a new board and initiates a background job to calculate its evolution.
        The status of the calculation can be tracked via the `status_url` returned.
      parameters: []
      responses:
        '201':
          description: board created
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status_url:
                    type: string
                    format: uri
                    example: "/api/v1/boards/1"
                required:
                - id
                - status_url
        '200':
          description: board already exists
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  status_url:
                    type: string
                    format: uri
                required:
                - id
                - status_url
        '422':
          description: invalid request
          content:
            application/json:
              schema:
                type: object
                properties:
                  errors:
                    type: array
                    items:
                      type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                board:
                  type: object
                  properties:
                    state:
                      type: array
                      items:
                        type: array
                        items:
                          type: integer
                          enum:
                          - 0
                          - 1
                      example:
                      - - 0
                        - 1
                        - 0
                      - - 0
                        - 1
                        - 0
                      - - 0
                        - 1
                        - 0
                  required:
                  - state
              required:
              - board
  "/api/v1/boards/{id}":
    parameters:
    - name: id
      in: path
      description: Board ID
      required: true
      schema:
        type: string
    get:
      summary: Shows board status
      tags:
      - Boards
      description: Shows the current status of the board's evolution, including whether
        it's still calculating or finished, and the total number of steps calculated
        so far.
      responses:
        '200':
          description: board status
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  state:
                    type: array
                    items:
                      type: array
                      items:
                        type: integer
                  status:
                    type: string
                    enum:
                    - processing
                    - stable
                    - oscillating
                    - max_attempts_reached
                  total_steps_calculated:
                    type: integer
                required:
                - id
                - state
                - status
                - total_steps_calculated
        '404':
          description: board not found
    delete:
      summary: Deletes a board
      tags:
      - Boards
      description: Deletes the board specified by ID and all of its associated step
        data.
      responses:
        '204':
          description: board deleted
        '404':
          description: board not found
  "/api/v1/boards/{id}/step/{number}":
    parameters:
    - name: id
      in: path
      description: Board ID
      required: true
      schema:
        type: string
    - name: number
      in: path
      description: Step number (generation)
      required: true
      schema:
        type: integer
    get:
      summary: Retrieves a specific step
      tags:
      - Boards
      description: Retrieves a previously calculated board state for a specific step
        number. Step 0 is the initial state.
      responses:
        '200':
          description: step found
          content:
            application/json:
              schema:
                type: object
                properties:
                  step:
                    type: integer
                  state:
                    type: array
                    items:
                      type: array
                      items:
                        type: integer
                required:
                - step
                - state
        '404':
          description: step not found
  "/api/v1/boards/{id}/next":
    parameters:
    - name: id
      in: path
      description: Board ID
      required: true
      schema:
        type: string
    get:
      summary: Gets the next state (step 1)
      tags:
      - Boards (Deprecated)
      description: |
        **Deprecated:** Use `GET /api/v1/boards/{id}/step/1` instead.

        Retrieves the state of the board after one generation (step 1).
      responses:
        '200':
          description: next state returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  step:
                    type: integer
                    example: 1
                  state:
                    type: array
                    items:
                      type: array
                      items:
                        type: integer
        '404':
          description: board or step not found
  "/api/v1/boards/{id}/steps/{n}":
    parameters:
    - name: id
      in: path
      description: Board ID
      required: true
      schema:
        type: string
    - name: "n"
      in: path
      description: Number of steps (generations)
      required: true
      schema:
        type: integer
    get:
      summary: Gets state after N steps
      tags:
      - Boards (Deprecated)
      description: |
        **Deprecated:** Use `GET /api/v1/boards/{id}/step/{n}` instead.

        Retrieves the state of the board after 'n' generations.
      responses:
        '200':
          description: state after n steps returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  step:
                    type: integer
                    example: 2
                  state:
                    type: array
                    items:
                      type: array
                      items:
                        type: integer
        '404':
          description: board or step not found
  "/api/v1/boards/{id}/final":
    parameters:
    - name: id
      in: path
      description: Board ID
      required: true
      schema:
        type: string
    get:
      summary: Gets the final state
      tags:
      - Boards (Deprecated)
      description: |
        **Deprecated:** Check the `status` on the main board endpoint `GET /api/v1/boards/{id}` instead.

        Returns the final state of the board if the calculation is complete.
        If the calculation is ongoing, it returns a status indicating it's still processing.
      responses:
        '200':
          description: final state returned
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum:
                    - stable
                    - oscillating
                    - max_attempts_reached
                  final_step:
                    type: integer
                  state:
                    type: array
                    items:
                      type: array
                      items:
                        type: integer
        '202':
          description: processing
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: processing
                  message:
                    type: string
        '404':
          description: board not found
servers:
- url: http://{defaultHost}
  variables:
    defaultHost:
      default: localhost:3000
